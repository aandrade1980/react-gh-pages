{"version":3,"sources":["ebconfig.js","App.js","reportWebVitals.js","index.js"],"names":["ebconfig","Notes","useEasybase","Frame","sync","configureFrame","useEffect","tableName","limit","noteRootStyle","border","borderRadius","margin","backgroundColor","padding","style","width","map","ele","index","title","description","String","createdat","slice","NewNoteButton","position","left","top","fontSize","onClick","prompt","push","Date","toISOString","App","className","display","justifyContent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OASeA,EANE,CACf,YAAe,mIACf,GAAM,oDACN,QAAW,c,eCCPC,EAAQ,WAAO,IAAD,EACsBC,cAAhCC,EADU,EACVA,MAAOC,EADG,EACHA,KAAMC,EADH,EACGA,eAErBC,qBAAU,WACRD,EAAe,CAAEE,UAAW,mBAAoBC,MAAO,KACvDJ,MAEC,IAEH,IAAMK,EAAgB,CACpBC,OAAQ,iBACRC,aAAc,EACdC,OAAQ,GACRC,gBAAiB,UACjBC,QAAS,GAGX,OACE,qBAAKC,MAAO,CAAEC,MAAO,KAArB,SACGb,IAAQc,KAAI,SAACC,EAAKC,GAAN,OACX,sBAAKJ,MAAON,EAAZ,UACE,6BAAKS,EAAIE,QACT,4BAAIF,EAAIG,cACR,gCAAQC,OAAOJ,EAAIK,WAAWC,MAAM,EAAG,QAHTL,SAUlCM,EAAgB,WAAO,IAAD,EACFvB,cAAhBC,EADkB,EAClBA,MAAOC,EADW,EACXA,KAsBf,OACE,wBAAQW,MArBU,CAClBW,SAAU,WACVC,KAAM,GACNC,IAAK,GACLC,SAAU,IAiBkBC,QAdV,WAClB,IAAMV,EAAQW,OAAO,sCACfV,EAAcU,OAAO,iCAE3B5B,IAAQ6B,KAAK,CACXZ,QACAC,cACAE,WAAW,IAAIU,MAAOC,gBAGxB9B,KAIA,iDAiBW+B,MAXf,WACE,OACE,qBAAKC,UAAU,MAAMrB,MAAO,CAAEsB,QAAS,OAAQC,eAAgB,UAA/D,SACE,eAAC,IAAD,CAAkBtC,SAAUA,EAA5B,UACE,cAAC,EAAD,IACA,cAAC,EAAD,UC5DOuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5103545a.chunk.js","sourcesContent":["/* eslint-disable */\n// WARNING: Do not edit this file\n\nconst ebconfig = {\n  \"integration\": \"react-1-99aggRrouKq5uxwAlQiiFa8bbObec4PyEg-U-54jXvIutpW0ajUBkCB0LldX8m7w9PJF7KNLgA8KrB0KuIp0Zk-Ts1b1I-nrsWXl7nIfgEE--TJeKLUvmpHQ\",\n  \"tt\": \"tt-1-tkH1385jJPNa7e8pCzOJ1QLWcr1Pg3XMhEypf3tJ6Gw=\",\n  \"version\": \"2020-11-20\"\n}\n\nexport default ebconfig;","import { EasybaseProvider, useEasybase } from 'easybase-react';\nimport { useEffect } from 'react';\n\nimport ebconfig from './ebconfig';\n\nimport './App.css';\n\nconst Notes = () => {\n  const { Frame, sync, configureFrame } = useEasybase();\n\n  useEffect(() => {\n    configureFrame({ tableName: 'REACT-SERVERLESS', limit: 10 });\n    sync();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const noteRootStyle = {\n    border: '2px #0af solid',\n    borderRadius: 9,\n    margin: 20,\n    backgroundColor: '#efefef',\n    padding: 6\n  };\n\n  return (\n    <div style={{ width: 400 }}>\n      {Frame().map((ele, index) => (\n        <div style={noteRootStyle} key={index}>\n          <h3>{ele.title}</h3>\n          <p>{ele.description}</p>\n          <small>{String(ele.createdat).slice(0, 10)}</small>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst NewNoteButton = () => {\n  const { Frame, sync } = useEasybase();\n\n  const buttonStyle = {\n    position: 'absolute',\n    left: 10,\n    top: 10,\n    fontSize: 21\n  };\n\n  const handleClick = () => {\n    const title = prompt('Please enter a title for your note');\n    const description = prompt('Please enter your description');\n\n    Frame().push({\n      title,\n      description,\n      createdat: new Date().toISOString()\n    });\n\n    sync();\n  };\n\n  return (\n    <button style={buttonStyle} onClick={handleClick}>\n      ðŸ““ Add Note ðŸ““\n    </button>\n  );\n};\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{ display: 'flex', justifyContent: 'center' }}>\n      <EasybaseProvider ebconfig={ebconfig}>\n        <NewNoteButton />\n        <Notes />\n      </EasybaseProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}